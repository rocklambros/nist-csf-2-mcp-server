apiVersion: apps/v1
kind: Deployment
metadata:
  name: nist-csf-mcp-server
  namespace: nist-csf
  labels:
    app.kubernetes.io/name: nist-csf-mcp-server
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: cybersecurity-framework
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: nist-csf-mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nist-csf-mcp-server
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nist-csf-mcp-server
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: mcp-server
        image: ghcr.io/rocklambros/nist-csf-2-mcp-server:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVER_PORT
          value: "8080"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: ENABLE_MONITORING
          value: "true"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: nist-csf-mcp-server-secrets
            optional: true
        - configMapRef:
            name: nist-csf-mcp-server-config
            optional: true
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
            ephemeral-storage: 1Gi
          requests:
            cpu: 500m
            memory: 256Mi
            ephemeral-storage: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        - name: tmp-volume
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data-volume
        configMap:
          name: nist-csf-framework-data
      - name: logs-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - nist-csf-mcp-server
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Equal
        effect: NoSchedule