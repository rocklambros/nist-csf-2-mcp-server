# NIST CSF 2.0 Assessment Platform
# Deployment profiles: default (dual-mode), development (separate services), production (with proxy)

services:
  # Main dual-mode server (MCP + HTTP) - Default deployment
  nist-csf-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: nist-csf-mcp-server:latest
    container_name: nist-csf-assessment-platform
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Read-only root filesystem
    read_only: true
    
    # Temporary filesystems for writable directories
    tmpfs:
      - /tmp:noexec,nosuid,size=100M
    
    volumes:
      # Data persistence with proper permissions
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      # GUI files mounted for HTTP serving
      - ./nist-csf-assessment-gui.html:/app/public/nist-csf-assessment-gui.html:ro
      - ./linear-assessment-gui.html:/app/public/linear-assessment-gui.html:ro
      # Secrets mounted as read-only (optional)
      - ./secrets:/app/secrets:ro
    
    # Network configuration - Map to port 3001 for consistency with local development
    ports:
      - "3001:8080"  # HTTP REST API + GUI access
    
    networks:
      - mcp-network
    
    # Environment variables from file
    env_file:
      - .env
    
    # Additional environment overrides
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - HTTP_PORT=8080          # HTTP REST API port
      - SERVER_HOST=0.0.0.0
      - AUTH_MODE=disabled      # Change to 'simple' or 'oauth' for production
      - CORS_ORIGIN=*           # Configure for production security
      - ENABLE_MONITORING=true
    
    # Run dual-mode server for both MCP and HTTP protocols
    command: ["node", "dist/dual-mode-server.js"]
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=mcp-server"
    
    # Capabilities drop (security hardening)
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    
    # User mapping
    user: "10001:10001"

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16